diff --git a/generated/test_implus_PytorchInsight.py b/generated/test_implus_PytorchInsight.py
index 39a4dd5..bc23957 100644
--- a/generated/test_implus_PytorchInsight.py
+++ b/generated/test_implus_PytorchInsight.py
@@ -6586,7 +6586,7 @@ class RoIPool(Module):
     def forward(self, features, rois):
         return roi_pool(features, rois, self.out_size, self.spatial_scale)
 
-
+import unittest
 import torch
 from _paritybench_helpers import _mock_config, _mock_layer, _paritybench_base, _fails_compile
 
@@ -6640,6 +6640,7 @@ class Test_implus_PytorchInsight(_paritybench_base):
     def test_013(self):
         self._check(L2Norm(*[], **{'n_dims': 4}), [torch.rand([4, 4, 4, 4])], {})
 
+    @unittest.skip("crashes")
     def test_014(self):
         self._check(SoftCrossEntropyLoss(*[], **{}), [torch.rand([4, 4, 4, 4]), torch.rand([4, 4, 4, 4])], {})
 
diff --git a/generated/test_lxtGH_OctaveConv_pytorch.py b/generated/test_lxtGH_OctaveConv_pytorch.py
index 8d44ffc..ef53705 100644
--- a/generated/test_lxtGH_OctaveConv_pytorch.py
+++ b/generated/test_lxtGH_OctaveConv_pytorch.py
@@ -1821,7 +1821,7 @@ class SoftCrossEntropyLoss(nn.NLLLoss):
         input = F.log_softmax(input, 1)
         return self.criterion(input, one_hot)
 
-
+import unittest
 import torch
 from _paritybench_helpers import _mock_config, _mock_layer, _paritybench_base, _fails_compile
 
@@ -1851,6 +1851,7 @@ class Test_lxtGH_OctaveConv_pytorch(_paritybench_base):
     def test_007(self):
         self._check(SRMLayer(*[], **{'channel': 4}), [torch.rand([4, 4, 4, 4])], {})
 
+    @unittest.skip("crashes")
     def test_008(self):
         self._check(SoftCrossEntropyLoss(*[], **{}), [torch.rand([4, 4, 4, 4]), torch.rand([4, 4, 4, 4])], {})
 
